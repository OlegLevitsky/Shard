# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

root = true

# All Files
[*]
end_of_line = crlf
indent_style = space
indent_size = 4
insert_final_newline = false
trim_trailing_whitespace = true

# Solution Files
[*.sln]
charset = utf-8-bom
indent_style = tab

# CSharp and Visual Basic code style settings:
[*.cs]
charset = utf-8-bom

# this. preferences
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = false:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_inferred_tuple_names = false:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = false:suggestion

# Null-checking preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion

#Implicit and explicit types
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Inlined variable declarations
csharp_style_inlined_variable_declaration = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = false:suggestion
csharp_style_pattern_local_over_anonymous_function = false:suggestion

# Null checking preferences
csharp_style_throw_expression = false:warning
csharp_style_conditional_delegate_call = true:warning

# Code block preferences
csharp_prefer_braces = true:suggestion

# Formatting conventions
csharp_new_line_before_open_brace = all
dotnet_sort_system_directives_first = true
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true

csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels= flush_left

csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# Naming
# Styles
dotnet_naming_style.camel_case_style.capitalization = camel_case
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_style.interface_style.capitalization = pascal_case
dotnet_naming_style.interface_style.required_prefix = I

#Symbols and Rules
# non private fields: Pascal case
dotnet_naming_symbols.non_private_field_symbol.applicable_kinds = field
dotnet_naming_symbols.non_private_field_symbol.applicable_accessibilities = public,internal,protected,protected_internal
dotnet_naming_rule.non_private_fields_are_pascal_case.severity = warning
dotnet_naming_rule.non_private_fields_are_pascal_case.symbols = non_private_field_symbol
dotnet_naming_rule.non_private_fields_are_pascal_case.style = pascal_case_style

# any static, readonly fields: Pascal case
dotnet_naming_symbols.readonly_fields_symbol.applicable_kinds = field
dotnet_naming_symbols.readonly_fields_symbol.applicable_accessibilities = private
dotnet_naming_symbols.readonly_fields_symbol.required_modifiers = const,static,readonly
dotnet_naming_rule.private_static_fields_are_camel_case.severity = warning
dotnet_naming_rule.private_static_fields_are_camel_case.symbols = readonly_fields_symbol
dotnet_naming_rule.private_static_fields_are_camel_case.style = pascal_case_style

# parameters: Camel case
dotnet_naming_symbols.parameter_symbol.applicable_kinds = parameter
dotnet_naming_rule.parameters_are_camel_case.severity = warning
dotnet_naming_rule.parameters_are_camel_case.symbols = parameter_symbol
dotnet_naming_rule.parameters_are_camel_case.style = camel_case_style

# class, struct, enum, delegate: Pascal case
dotnet_naming_symbols.non_interface_type_symbol.applicable_kinds = class,struct,enum,delegate
dotnet_naming_rule.non_interface_types_are_pascal_case.severity = warning
dotnet_naming_rule.non_interface_types_are_pascal_case.symbols = non_interface_type_symbol
dotnet_naming_rule.non_interface_types_are_pascal_case.style = pascal_case_style

# interfaces: I + Pascal case
dotnet_naming_symbols.interface_type_symbol.applicable_kinds = interface
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.severity = warning
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.symbols = interface_type_symbol
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.style = interface_style

# Public property, event: Pascal case
dotnet_naming_symbols.member_symbol.applicable_kinds = property,event
dotnet_naming_symbols.non_private_field_symbol.applicable_accessibilities = public,internal
dotnet_naming_rule.members_are_pascal_case.severity = warning
dotnet_naming_rule.members_are_pascal_case.symbols = member_symbol
dotnet_naming_rule.members_are_pascal_case.style = pascal_case_style